// PiSvr.idl : IDL source for PiSvr.dll
//

// This file will be processed by the MIDL tool to
// produce the type library (PiSvr.tlb) and marshalling code.

import "oaidl.idl";
import "ocidl.idl";

	[
		object,
		uuid(DEC22F36-DD78-11D1-97FD-006008243C8C),
		dual,
		helpstring("ICalcPi Interface"),
		pointer_default(unique)
	]
	interface ICalcPi : IDispatch
	{
		[propget, id(1), helpstring("property Digits")] HRESULT Digits([out, retval] long *pVal);
		[propput, id(1), helpstring("property Digits")] HRESULT Digits([in] long newVal);
		[id(2), helpstring("method CalcPi")] HRESULT CalcPi([out, retval] BSTR* pbstrPi);
	};

	[
		object,
		uuid(7B568195-F63B-11D1-9818-00600823CFFB),
		oleautomation,
		helpstring("IAdvertiseMyself Interface"),
		pointer_default(unique)
	]
	interface IAdvertiseMyself : IUnknown
	{
		[helpstring("method ShowAd")] HRESULT ShowAd(BSTR bstrClient);
	};

[
	uuid(DEC22F2A-DD78-11D1-97FD-006008243C8C),
	version(1.0),
	helpstring("PiSvr 1.0 Type Library")
]
library PISVRLib
{
	importlib("stdole32.tlb");
	importlib("stdole2.tlb");

	[
		uuid(DEC22F38-DD78-11D1-97FD-006008243C8C),
		helpstring("_ICalcPiEvents Interface")
	]
  dispinterface _ICalcPiEvents
  {
    properties:
    methods:
      [id(1)] void OnDigit([in] short nIndex, [in] short nDigit);
  };

	[
		uuid(DEC22F37-DD78-11D1-97FD-006008243C8C),
		helpstring("CalcPi Class")
	]
	coclass CalcPi
	{
		[default] interface ICalcPi;
		[default, source] dispinterface _ICalcPiEvents;
  	interface IAdvertiseMyself;
	};
};
